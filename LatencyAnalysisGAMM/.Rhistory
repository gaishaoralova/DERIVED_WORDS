data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.amplitude = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.amplitude
###################################################################
##
##  150-300 positive
##
###################################################################
data = read.table("ld_amp150_300.txt",header = T)
View(data)
data = read.table("ld_lat150_300.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
View(data.Melt.Clean)
model.latency = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.latency
###################################################################
##
##  300-500 negative
##
###################################################################
data = read.table("ld_amp300_500.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.amplitude = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.amplitude
data = read.table("ld_lat300_500.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.latency = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.latency
###################################################################
##
##  300-500 negative
##
###################################################################
data = read.table("ld_amp300_500.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.amplitude = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.amplitude
data = read.table("ld_lat150_300.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.latency = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.latency
model.latency = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
data = read.table("ld_lat150_300.txt",header = T)
data.Melt = melt(data,id=c("ERPset"))
#Extract electrode label
x = str_extract(data.Melt$variable,".{2,3}$")
data.Melt$Elec = substring(x,1,nchar(x))
#Extract condition
x = str_extract(data.Melt$ERPset,".{7}$")
data.Melt$condition = x
#Delete ld at the end of condition
x = str_remove(data.Melt$condition,".{3}$")
data.Melt$condition = x
#Extract frequency
x = str_extract(data.Melt$condition,"^.{2}")
data.Melt$freq = x
#Extract lsa
x = str_extract(data.Melt$condition,".{2}$")
data.Melt$lsa = x
#Extract participant
x = str_extract(data.Melt$ERPset,"^.{5}")
data.Melt$subject = x
data.Melt.Clean = data.Melt
source('NemoROI.R')
x = sapply(data.Melt.Clean$Elec, nemoROI)
#add regions to list
data.Melt.Clean$region = x
#Remove undefined regions
data.Melt.Clean = subset(data.Melt.Clean,region!='UNDEF')
#Remove unnecessary columns
data.Melt.Clean$variable = NULL
data.Melt.Clean$Elec = NULL
data.Melt.Clean$ERPset = NULL
#Make sure all are factors
data.Melt.Clean$condition = as.factor(data.Melt.Clean$condition)
data.Melt.Clean$region = as.factor(data.Melt.Clean$region)
#Average all electrodes for each region
data.Melt.Clean = aggregate(value~subject+freq+lsa+region,data.Melt.Clean, mean)
model.latency = ezANOVA(data.Melt.Clean %>% filter(region == 'M_C' | region == 'M_P' | region == 'M_F'),dv=.(value),wid=.(subject),within=.(lsa, freq, region),type=3)
describeBy(data.Melt.Clean$value, data.Melt.Clean$condition)
model.latency
library(itsadug)
library(mgcv)
library(eegUtils)
library(dplyr)
library(ggplot2)
subject_df <- read.csv('saved_01.csv')
subject_df <- read.csv('saved_01.csv')
subject_df %>%
group_by(Freq, time) %>%
ggplot(aes(x = time, y = amplitude)) +
geom_line(aes(group = epoch), alpha = 0.2) +
stat_summary(fun.y = mean,
geom = "line",
size = 2,
aes(colour = Freq)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
facet_wrap(~electrode) +
theme_classic()
m1 <- gam(amplitude ~ Lsa + s(time, by = Lsa) +
+ s(time, epoch, bs='fs', m=1), data=subject_df)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
m2 <- gam(amplitude ~ Freq + s(time, by = Freq) +
+ s(time, epoch, bs='fs', m=1), data=subject_df)
summary(m2)
plot_smooth(m2, view = 'time', plot_all = c('Freq'))
plot_diff(m2, view = 'time', comp = list(Freq=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
setwd("N:/DATA/EEG_Eyetracking/DERIVED_WORDS/EYE_DATA/SEN_READ")
setwd("N:/DATA/EEG_Eyetracking/DERIVED_WORDS/Latency Analysis (GAMM)")
paste(folder_name, sub_name, '\', subname, '_lfhl_ld.set')
folder_name <- '..\EYE_DATA\SEN_READ'
sub_name <- 'sen_01'
folder_name <- '..\\EYE_DATA\\SEN_READ'
paste(folder_name, sub_name, '\\', subname, '_lfhl_ld.set')
paste(folder_name, sub_name, '\\', sub_name, '_lfhl_ld.set')
paste(folder_name, sub_name, '\\', sub_name, '_lfhl_ld.set', sep='')
library(itsadug)
library(mgcv)
library(eegUtils)
library(dplyr)
library(ggplot2)
setwd("N:/DATA/EEG_Eyetracking/DERIVED_WORDS/Latency Analysis (GAMM)")
library(itsadug)
library(mgcv)
library(eegUtils)
library(dplyr)
library(ggplot2)
folder_name <- '..\\EYE_DATA\\SEN_READ'
sub_name <- 'sen_01'
hfhl <- import_set(paste(folder_name, sub_name, '\\', sub_name, '_lfhl_ld.set', sep=''))
sub_name <- 'sen_01'
hfhl <- import_set(paste(folder_name , '\\', sub_name, '\\', sub_name, '_lfhl.set', sep=''))
lfhl <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_lfhl.set', sep=''))
lfll <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_lfll.set', sep=''))
hfll <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_hfhl.set', sep=''))
hfhl <- import_set(paste(folder_name , '\\', sub_name, '\\', sub_name, '_hfhl.set', sep=''))
hfll <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_hfll.set', sep=''))
View(hfhl)
hfll
hfll %>% eeg_downsample(2)
hfhl %>% select_elecs(c("Fz","Cz", "Pz"))
hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7))
hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
rm_baseline(c(-.1, 0))
hfhl_df <- hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'H', Lsa = 'H')
hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE)
hfhl_df <- hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'H', Lsa = 'H')
View(hfhl_df)
lfhl_df <- lfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'L', Lsa = 'H', epoch = epoch + max(hfhl_df$epoch))
lfll_df <- lfll %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'L', Lsa = 'L', epoch = epoch + max(lfhl_df$epoch))
hfll_df <- hfll %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'H', Lsa = 'L', epoch = epoch + max(lfll_df$epoch))
View(hfhl_df)
subject_df = bind_rows(hfhl_df, lfhl_df, lfll_df, hfll_df)
View(subject_df)
subject_df %>% write.csv('saved_01.csv')
library(itsadug)
library(mgcv)
library(eegUtils)
library(dplyr)
library(ggplot2)
subject_df <- read.csv('saved_01.csv')
subject_df %>%
group_by(Freq, time) %>%
ggplot(aes(x = time, y = amplitude)) +
geom_line(aes(group = epoch), alpha = 0.2) +
stat_summary(fun.y = mean,
geom = "line",
size = 2,
aes(colour = Freq)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
facet_wrap(~electrode) +
theme_classic()
subject_df %>%
group_by(Lsa, time) %>%
ggplot(aes(x = time, y = amplitude)) +
geom_line(aes(group = epoch), alpha = 0.2) +
stat_summary(fun.y = mean,
geom = "line",
size = 2,
aes(colour = Lsa)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
facet_wrap(~electrode) +
theme_classic()
m1 <- gam(amplitude ~ s(time, by = Lsa) +
s(epoch, bs='re'), data=subject_df)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
m1 <- gam(amplitude ~ Lsa + s(time, by = Lsa) +
s(epoch, bs='re'), data=subject_df)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
m1 <- gam(amplitude ~  s(time, by = Lsa) +
s(epoch, bs='re'), data=subject_df)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
m1 <- gam(amplitude ~  s(time, by = Lsa) +
s(epoch, bs='re') + s(electrode, bs='re'), data=subject_df)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'))
plot_smooth(m1, view = 'time', plot_all = c('Lsa'), rm.ranef = TRUE)
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE, rm.ranef = TRUE)
library(itsadug)
library(mgcv)
library(eegUtils)
library(dplyr)
library(ggplot2)
folder_name <- '..\\EYE_DATA\\LEX_DEC'
sub_name <- 'ld_01'
hfhl <- import_set(paste(folder_name , '\\', sub_name, '\\', sub_name, '_hfhl_ld.set', sep=''))
lfhl <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_lfhl_ld.set', sep=''))
lfll <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_lfll_ld.set', sep=''))
hfll <- import_set(paste(folder_name, '\\', sub_name, '\\', sub_name, '_hfll_ld.set', sep=''))
hfhl_df <- hfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'H', Lsa = 'H')
lfhl_df <- lfhl %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'L', Lsa = 'H', epoch = epoch + max(hfhl_df$epoch))
lfll_df <- lfll %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'L', Lsa = 'L', epoch = epoch + max(lfhl_df$epoch))
hfll_df <- hfll %>% select_elecs(c("Fz","Cz", "Pz")) %>%
select_times(c(-.1, .7)) %>%
#  rm_baseline(c(-.1, 0)) %>%
as.data.frame(long = TRUE) %>%
mutate(Freq = 'H', Lsa = 'L', epoch = epoch + max(lfll_df$epoch))
subject_df = bind_rows(hfhl_df, lfhl_df, lfll_df, hfll_df)
subject_df %>% write.csv('saved_01.csv')
subject_df <- read.csv('saved_01.csv')
subject_df %>%
group_by(Freq, time) %>%
ggplot(aes(x = time, y = amplitude)) +
geom_line(aes(group = epoch), alpha = 0.2) +
stat_summary(fun.y = mean,
geom = "line",
size = 2,
aes(colour = Freq)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
facet_wrap(~electrode) +
theme_classic()
subject_df %>%
group_by(Lsa, time) %>%
ggplot(aes(x = time, y = amplitude)) +
geom_line(aes(group = epoch), alpha = 0.2) +
stat_summary(fun.y = mean,
geom = "line",
size = 2,
aes(colour = Lsa)) +
geom_vline(xintercept = 0) +
geom_hline(yintercept = 0) +
facet_wrap(~electrode) +
theme_classic()
m1 <- gam(amplitude ~  s(time, by = Lsa) +
s(epoch, bs='re') + s(electrode, bs='re'), data=subject_df)
summary(m1)
summary(m1)
plot_smooth(m1, view = 'time', plot_all = c('Lsa'), rm.ranef = TRUE)
plot_diff(m1, view = 'time', comp = list(Lsa=c("H", "L")),
eegAxis=TRUE, shade=FALSE, rm.ranef = TRUE)
m2 <- gam(amplitude ~ s(time, by = Freq) +
+ s(time, epoch, bs='fs', m=1), data=subject_df)
summary(m2)
plot_smooth(m2, view = 'time', plot_all = c('Freq'))
plot_diff(m2, view = 'time', comp = list(Freq=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
m2 <- gam(amplitude ~ s(time, by = Freq) +
+ s(epoch, bs='re') + s(electrode, bs='re') , data=subject_df)
summary(m2)
plot_smooth(m2, view = 'time', plot_all = c('Freq'))
plot_diff(m2, view = 'time', comp = list(Freq=c("H", "L")),
eegAxis=TRUE, shade=FALSE)
plot_smooth(m2, view = 'time', plot_all = c('Freq'))
install.packages("ERP")
?ERP
??ERP
